A2
CIS * 3210
October 31st, 2017

Christopher Katsaras & Connor Geddes
Assigned port number = 12040

**********************************************
Compile:
**********************************************

	Type "make" or "make all" to compile both client and server


**********************************************
Remove all executables and intermediate files 
**********************************************

	Type "make clean"


**********************************************
Run:
**********************************************

	Server: 
		Type "./server portnumber" 
		- Where portnumber is a valid port number (e.g 2300)

	Client: 
		type "./client hostname:portnumber chunkSize filenameToWriteTo fileSize filenameLength < filenameToReadFrom"
		- Where hostname is a valid host (e.g chriskatsaras.com)
		- Where portnumber is a valid port number (e.g 2300)
		- Where chunkSize is a valid 8-byte int (e.g 4096)
		- Where filenameToWriteTo is a valid filename (e.g connor.txt)
		- Where fileSize is a valid 8-byte in (e.g 12345678)
		- Where fileNameLength is the length of filenameToWriteTo. This is necessary for the 	  protocol which Dennis instructed us to do in class

**********************************************
File name collisions
**********************************************

We decided our resolution for filname collision would be to terminate connection in the event that a collision occured and prompt the user that a file with the same name is already being written to.

**********************************************
Testing with multiple clients
**********************************************
	Unfortunately, due to time constraints we were unable to complete a functioning testing script. This was due to a variety of factors which included the Python's GIL and the difficulty is causes with executing multi-threaded code in a script.
	Now, while there is not script, we will provide you with the tools necessary to test our asynchronous server!

	To test, simply copy client commands like these into 2 seperate terminals. (Don't worry, the files are large enough that you will have time to switch between terminals!)

	terminal1:
		./client ginny.socs.uoguelph.ca:12040 4096 test1.txt 9123213 9 < eightydays.txt

	terminal2:
		./client ginny.socs.uoguelph.ca:12040 4096 test2.txt 9123213 9 < eightydays.txt


	If you wish to see collision occur, you can simply change terminal twos filenameToSave to be test1.txt!

	We both apologise for the lack of script and hope that these instructions will still allow you to test our program with ease. If you have any questions about testing our program, we would be more than happy to explain in greater detail.

**********************************************
Example server output
**********************************************

	Server:
		 ./server 12040
			Listening on port 12040
			Main thread created
			UI thread created
			Choose an option:
			1: Show active transfers
			2: Shut down server
			1


			****************
			Active Tranfers
			****************


			Transfer number: 1	File name: test0.txt	File size: 289768942


			Transfer number: 2	File name: test1.txt	File size: 289768942


			Choose an option:
			1: Show active transfers
			2: Shut down server



			Closing file
			Closing transfer thread!



			Closing file
			Closing transfer thread!



